grafana:
  # Admin password (change to a secure value or use a secret)
  adminPassword: admin  # TODO: Replace with a secure password or reference a secret
  service:
    type: LoadBalancer
    port: 8097  # Maps to Grafana's container port 3000
  persistence:
    enabled: true
    storageClassName: standard  # Verify 'standard' exists in your cluster (kubectl get storageclass)
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  # Resource limits for Grafana
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # Dashboard provider configuration
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: Provisioned
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards
  # Enable sidecar to load dashboards from ConfigMap
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      searchNamespace: monitoring  # Matches the namespace in the script

prometheus:
  prometheusSpec:
    retention: 15d  # Retains data for 15 days
    # Note: retentionSize is not supported by Prometheus; rely on retention and PVC size
    serviceMonitorSelectorNilUsesHelmValues: true  # Ensures ServiceMonitors from chart are scraped
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard  # Verify 'standard' exists in your cluster
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    # Resource limits for Prometheus
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
  # Additional Prometheus rules (assumes node_exporter is enabled)
  additionalPrometheusRulesMap:
    example-rule:
      groups:
        - name: node.rules
          rules:
            - record: instance:node_cpu:rate5m
              expr: rate(node_cpu_seconds_total[5m])
              labels:
                severity: critical
