grafana:
  adminPassword: admin
  service:
    type: LoadBalancer
    port: 8097
  # ingress:
  #   enabled: true
  #   annotations:
  #     nginx.ingress.kubernetes.io/rewrite-target: /
  #     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  #   hosts:
  #     - host: grafana.docker.local
  #       paths:
  #         - path: /
  #           pathType: Prefix
    # tls: []  # Optionally configure TLS here
  persistence:
    enabled: true
    storageClassName: standard
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: Provisioned
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      searchNamespace: monitoring

prometheus:
  prometheusSpec:
    retention: 15d
    serviceMonitorSelectorNilUsesHelmValues: true
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: standard
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
  additionalPrometheusRulesMap:
    example-rule:
      groups:
        - name: node.rules
          rules:
            - record: instance:node_cpu:rate5m
              expr: rate(node_cpu_seconds_total[5m])
              labels:
                severity: critical
